/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scripts/horizontalSlider.js":
/*!*****************************************!*\
  !*** ./src/scripts/horizontalSlider.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ createHorizontalSlider)\n/* harmony export */ });\nfunction createHorizontalSlider() {\n  var sliderContainer = document.querySelector('#sliderContainer');\n  var sliderWrapper = document.querySelector('#sliderWrapper');\n  var slides = document.querySelectorAll('.slider-slide');\n  var sliderPagination = document.querySelector('#sliderPagination');\n  var counter = document.querySelector('#countNumber');\n  var wasPressed = false;\n  var slidePosition = 0;\n  var indexOfActiveSlide = 0;\n  var startPointOfDragging;\n  var slideWidth;\n  var bullets;\n  var timeOfStartDragging;\n  var draggingStopped;\n\n  (function init() {\n    initBullets();\n    setCurrentSlideNumber();\n    addActiveSlideAndBullet(indexOfActiveSlide);\n    initEventListeners();\n    setSizeOfSlide();\n    addTransparentHighlight();\n  })();\n\n  function addTransparentHighlight() {\n    sliderContainer.classList.add('highlight-transparent');\n  }\n\n  function setCurrentSlideNumber() {\n    var numberOfSlide = indexOfActiveSlide + 1;\n\n    if (numberOfSlide >= 10) {\n      counter.innerText = \"\".concat(numberOfSlide);\n    } else {\n      counter.innerText = \"0\".concat(numberOfSlide);\n    }\n  }\n\n  function setSizeOfSlide() {\n    slideWidth = sliderContainer.offsetWidth;\n  }\n\n  function initBullets() {\n    for (var i = 0; i < slides.length; i++) {\n      createBullet(i);\n    }\n\n    bullets = document.querySelectorAll('.slider-pagination-bullet');\n  }\n\n  function triggerBullets(e) {\n    if (e.target.classList.contains('slider-pagination-bullet')) {\n      var numberBulletIndex = Number(e.target.dataset.bulletIndex);\n      bulletClickTrigger(numberBulletIndex);\n    }\n  }\n\n  function createBullet(index) {\n    var el = document.createElement('span');\n    el.classList.add('slider-pagination-bullet');\n    el.setAttribute('tabindex', '0');\n    el.dataset.bulletIndex = index;\n    sliderPagination.appendChild(el);\n  }\n\n  function changeSliderPosition(indexOfNewActiveSlide) {\n    setSliderPosition(indexOfNewActiveSlide); // Add transition duration during changing slides.\n\n    startSliding();\n  }\n\n  function startSliding() {\n    sliderWrapper.style.transitionDuration = '300ms';\n    addSlidingStatus();\n  }\n\n  function endSliding() {\n    sliderWrapper.style.transitionDuration = '0ms';\n    removeSlidingStatus();\n  }\n\n  function bulletClickTrigger(indexOfNewActiveSlide) {\n    changeSliderPosition(indexOfNewActiveSlide);\n    setNewActiveSlideAndBullet(indexOfNewActiveSlide);\n    setCurrentSlideNumber();\n  }\n\n  function setSliderPosition(indexOfSlide) {\n    var draggedDistance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var slowingCoeff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    slidePosition = slideWidth * indexOfSlide + draggedDistance / slowingCoeff;\n    sliderWrapper.style.transform = \"translate3d(\".concat(-slidePosition, \"px, 0, 0)\");\n  }\n\n  function removePrevActiveSlideAndBullet(i) {\n    slides[i].classList.remove('active-slide');\n    bullets[i].classList.remove('active-bullet');\n  }\n\n  function addActiveSlideAndBullet(i) {\n    slides[i].classList.add('active-slide');\n    bullets[i].classList.add('active-bullet');\n  }\n\n  function setNewActiveSlideAndBullet(newIndex) {\n    var prevIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : indexOfActiveSlide;\n    removePrevActiveSlideAndBullet(prevIndex);\n    addActiveSlideAndBullet(newIndex);\n    setNewIndexOfActiveSlide(newIndex);\n  }\n\n  function setNewIndexOfActiveSlide(newIndex) {\n    indexOfActiveSlide = newIndex;\n  }\n\n  function isSliding() {\n    return sliderWrapper.classList.contains('sliding');\n  }\n\n  function startOfDragging(e) {\n    // If click was on pagination bar or right click was used\n    // then slider-dragging is not getting triggered.\n    var elementsClickedId = [e.target.id, e.target.parentElement.id];\n    if (elementsClickedId.includes('sliderPagination') || e.buttons === 2 || isSliding()) return;\n    wasPressed = true;\n    startPointOfDragging = e.pageX;\n    timeOfStartDragging = new Date().getTime();\n    endSliding();\n    e.preventDefault();\n  }\n\n  function dragging(e) {\n    // If user move mouse without wasPressed slider won't get triggered.\n    if (!wasPressed) return;\n    var currentPointOfDragging = e.pageX;\n    var draggedDistance = startPointOfDragging - currentPointOfDragging;\n    var slowingCoeff = 2;\n\n    if (draggedDistance < 0) {\n      draggingUp(draggedDistance, slowingCoeff);\n    } else if (draggedDistance > 0) {\n      draggingDown(draggedDistance, slowingCoeff);\n    }\n  }\n\n  function draggingUp(draggedDistance, slowingCoeff) {\n    if (isFirstSlide()) {\n      setSliderPosition(indexOfActiveSlide, draggedDistance, slowingCoeff);\n    } else {\n      setSliderPosition(indexOfActiveSlide, draggedDistance);\n    }\n  }\n\n  function draggingDown(draggedDistance, slowingCoeff) {\n    if (isLastSlide()) {\n      setSliderPosition(indexOfActiveSlide, draggedDistance, slowingCoeff);\n    } else {\n      setSliderPosition(indexOfActiveSlide, draggedDistance);\n    }\n  }\n\n  function endOfDragging(e) {\n    if (!wasPressed) return;\n    wasPressed = false;\n    var endPointOfDragging = e.pageX;\n    var draggedDistance = startPointOfDragging - endPointOfDragging;\n    draggingStopped = new Date().getTime(); // If user dragged in vertical direction\n    // then slider doesn't get triggered.\n\n    if (slidingWasCanceled(endPointOfDragging)) return; // If not choose next slider according to direction.\n\n    chooseNextSlide(draggedDistance, timeOfDragging());\n  }\n\n  function slidingWasCanceled(endPointOfDragging) {\n    return !!(endPointOfDragging === 0 && timeOfDragging() < 100);\n  }\n\n  function timeOfDragging() {\n    return draggingStopped - timeOfStartDragging;\n  }\n\n  function chooseNextSlide(draggedDistance, dragTime) {\n    if (draggedDistance === 0) {// Nothing happens.\n    } else if (timeLimitBreached(dragTime)) {\n      goToCurrentSlide();\n      startSliding();\n    } else if (directionOfDragging(draggedDistance) === 'left') {\n      isFirstSlide() ? goToCurrentSlide() : goToPrevSlide();\n      startSliding();\n    } else if (directionOfDragging(draggedDistance) === 'right') {\n      isLastSlide() ? goToCurrentSlide() : goToNextSlide();\n      startSliding();\n    }\n  }\n\n  function directionOfDragging(draggedDistance) {\n    return draggedDistance > 0 ? 'right' : 'left';\n  }\n\n  function timeLimitBreached(dragTime) {\n    return dragTime > 250;\n  }\n\n  function addSlidingStatus() {\n    sliderWrapper.classList.add('sliding');\n  }\n\n  function removeSlidingStatus() {\n    sliderWrapper.classList.remove('sliding');\n  }\n\n  function isFirstSlide() {\n    return indexOfActiveSlide === 0;\n  }\n\n  function isLastSlide() {\n    return indexOfActiveSlide === slides.length - 1;\n  }\n\n  function goToCurrentSlide() {\n    setSliderPosition(indexOfActiveSlide);\n  }\n\n  function goToPrevSlide() {\n    var newActiveSlide = indexOfActiveSlide - 1;\n    var prevActiveSlide = indexOfActiveSlide;\n    setSliderPosition(newActiveSlide);\n    setNewActiveSlideAndBullet(newActiveSlide, prevActiveSlide);\n    setCurrentSlideNumber();\n  }\n\n  function goToNextSlide() {\n    var newActiveSlide = indexOfActiveSlide + 1;\n    var prevActiveSlide = indexOfActiveSlide;\n    setSliderPosition(newActiveSlide);\n    setNewActiveSlideAndBullet(newActiveSlide, prevActiveSlide);\n    setCurrentSlideNumber();\n  }\n\n  function initEventListeners() {\n    if (window.PointerEvent) {\n      sliderContainer.addEventListener('pointerdown', startOfDragging);\n      sliderContainer.addEventListener('pointermove', dragging);\n      sliderContainer.addEventListener('pointerup', endOfDragging);\n      sliderContainer.addEventListener('pointercancel', endOfDragging); //\n\n      sliderContainer.addEventListener('mouseleave', endOfDragging);\n    } else {\n      sliderContainer.addEventListener('mousedown', startOfDragging);\n      sliderContainer.addEventListener('mousemove', dragging);\n      sliderContainer.addEventListener('mouseup', endOfDragging);\n      sliderContainer.addEventListener('mouseleave', endOfDragging);\n      sliderContainer.addEventListener('touchstart', startOfDragging);\n      sliderContainer.addEventListener('touchmove', dragging);\n      sliderContainer.addEventListener('touchcancel', endOfDragging);\n      sliderContainer.addEventListener('touchend', endOfDragging);\n    } // set transitionDuration as 0ms when sliding transition ended\n    // so we can drag without any transition\n\n\n    sliderWrapper.addEventListener('transitionend', endSliding); // change size of slide according to the size of viewport\n\n    window.addEventListener('resize', function () {\n      setSizeOfSlide();\n      setSliderPosition(indexOfActiveSlide);\n    }); // listen click on each bullet\n\n    sliderPagination.addEventListener('click', triggerBullets);\n    sliderPagination.addEventListener('keydown', handleBulletPress);\n  }\n\n  function handleBulletPress(e) {\n    console.log(e.code);\n\n    if (e.code === 'Enter' || e.code === 'Space') {\n      // Prevent prevent space bar from scrolling page.\n      e.preventDefault();\n      triggerBullets(e);\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/horizontalSlider.js\n");

/***/ }),

/***/ "./src/scripts/index.js":
/*!******************************!*\
  !*** ./src/scripts/index.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _horizontalSlider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./horizontalSlider.js */ \"./src/scripts/horizontalSlider.js\");\n/* harmony import */ var _verticalSlider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./verticalSlider.js */ \"./src/scripts/verticalSlider.js\");\n\n // header\n\nvar hamburger = document.querySelector('.header__hamburger');\nvar hamburgerMenuText = document.querySelector('.header__hamburger-text');\nvar hamburgerMenu = document.querySelector('.header__hamburger-menu');\nvar headerCloseSign = document.querySelector('.header__toggle-menu-cross-sign');\nvar pageBody = document.querySelector('.wooder');\nvar headerToggleMenuLink = document.querySelectorAll('.header__toggle-menu-link');\n\nfunction hamburgerToggle() {\n  pageBody.classList.add('opacity_off');\n  hamburgerMenu.style.cursor = 'auto';\n  setTimeout(function () {\n    hamburgerMenu.classList.add('active');\n    pageBody.style.overflow = 'hidden';\n    pageBody.classList.remove('opacity_off');\n  }, 500);\n}\n\nhamburger.addEventListener('click', hamburgerToggle);\nhamburgerMenuText.addEventListener('click', hamburgerToggle);\n\nfunction closeMenu() {\n  pageBody.classList.add('opacity_off');\n  setTimeout(function () {\n    hamburgerMenu.classList.remove('active');\n    pageBody.classList.remove('opacity_off');\n    pageBody.style.overflow = 'visible';\n  }, 500);\n  hamburgerMenu.style.cursor = 'pointer';\n}\n\nheaderCloseSign.addEventListener('click', function () {\n  closeMenu();\n});\nheaderToggleMenuLink.forEach(function (el) {\n  el.addEventListener('click', function () {\n    closeMenu();\n  });\n});\nvar firebaseConfig = {\n  apiKey: 'AIzaSyA4apyHWSRjMvYyvrzegqNv5weVktk-XMs',\n  authDomain: 'wooder-1fb11.firebaseapp.com',\n  projectId: 'wooder-1fb11',\n  storageBucket: 'wooder-1fb11.appspot.com',\n  messagingSenderId: '852775924188',\n  appId: '1:852775924188:web:5107a8944b53cc1a705f19'\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig); // Get a reference to the database service\n\nfunction databaseInit() {\n  return firebase.database().ref('/').once('value');\n}\n\n(function sliderInit() {\n  // Get data of banner content from db and assign it to jsonBanner.\n  databaseInit().then(function (answer) {\n    return answer.val();\n  }).then(function (jsonBanner) {\n    // Call function which creates sliders filling each with data.\n    createSlides(jsonBanner.sliderContent); // Call function which sets horizontal or vertical direction\n    // according to the size of user viewport and returns the direction.\n\n    var dir = setDirForSlider(); // Create slider according to the direction.\n\n    dir === 'horizontal' ? (0,_horizontalSlider_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])() : (0,_verticalSlider_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n  });\n})();\n\nfunction createSlides(sliderContent) {\n  // Iterate through each slide that came from db.\n  for (var i = 0; i < sliderContent.length; i++) {\n    // Each iteration create slider(banner) and fill it with content from db.\n    var swiperSlide = document.createElement('div');\n    swiperSlide.classList.add('slider-slide');\n    var bannerContent = document.createElement('div');\n    bannerContent.classList.add('banner__content');\n    bannerContent.innerHTML = \"\\n          <div class=\\\"banner__title-container\\\">\\n              <h2 class=\\\"banner__title\\\">\".concat(sliderContent[i].title, \"</h2>\\n          </div>\\n          <div class=\\\"banner__text-container\\\">\\n              <p class=\\\"banner__text\\\">\").concat(sliderContent[i].text, \"</p>\\n          </div>\\n          \");\n    swiperSlide.appendChild(bannerContent);\n    sliderWrapper.appendChild(swiperSlide);\n  }\n}\n\nfunction setDirForSlider() {\n  var sliderDirection = 'vertical';\n  var smallWindow = false;\n\n  if (window.innerWidth < 1010) {\n    sliderDirection = 'horizontal';\n    smallWindow = true;\n  } // Add resize listener and direction of slider\n  // in accordance with the size of user viewport.\n\n\n  window.addEventListener('resize', function () {\n    if (window.innerWidth < 1010) {\n      if (smallWindow === false) {\n        smallWindow = true;\n        window.location.reload();\n      }\n    } else if (smallWindow === true) {\n      smallWindow = false;\n      window.location.reload();\n    }\n  });\n  return sliderDirection;\n}\n\nfunction triggerVideo(e) {\n  // Show wrapper when button or img was clicked.\n  if (e.target.classList.contains('video__button') || e.target.classList.contains('about-wooder__photo')) {\n    e.target.parentElement.querySelector('.video__container').style.display = 'flex';\n  } // Hide wrapper if click was on it.\n\n\n  if (e.target.classList.contains('video__wrapper')) {\n    e.target.parentElement.style.display = 'none';\n  }\n}\n\nfunction allGlobalEventCallbacks(e) {\n  triggerVideo(e);\n}\n\npageBody.addEventListener('click', allGlobalEventCallbacks);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/index.js\n");

/***/ }),

/***/ "./src/scripts/verticalSlider.js":
/*!***************************************!*\
  !*** ./src/scripts/verticalSlider.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ createVerticalSlider)\n/* harmony export */ });\nfunction createVerticalSlider() {\n  var sliderContainer = document.querySelector('#sliderContainer');\n  var sliderWrapper = document.querySelector('#sliderWrapper');\n  var slides = document.querySelectorAll('.slider-slide');\n  var sliderPagination = document.querySelector('#sliderPagination');\n  var counter = document.querySelector('#countNumber');\n  var wasPressed = false;\n  var slidePosition = 0;\n  var indexOfActiveSlide = 0;\n  var startPointOfDragging;\n  var slideHeight;\n  var bullets;\n  var timeOfStartDragging;\n  var draggingStopped;\n\n  (function init() {\n    initBullets();\n    setCurrentSlideNumber();\n    addActiveSlideAndBullet(indexOfActiveSlide);\n    initEventListeners();\n    setSizeOfSlide();\n    addTransparentHighlight();\n  })();\n\n  function addTransparentHighlight() {\n    sliderContainer.classList.add('highlight-transparent');\n  }\n\n  function setCurrentSlideNumber() {\n    var numberOfSlide = indexOfActiveSlide + 1;\n\n    if (numberOfSlide >= 10) {\n      counter.innerText = \"\".concat(numberOfSlide);\n    } else {\n      counter.innerText = \"0\".concat(numberOfSlide);\n    }\n  }\n\n  function setSizeOfSlide() {\n    slideHeight = sliderContainer.offsetHeight;\n  }\n\n  function initBullets() {\n    for (var i = 0; i < slides.length; i++) {\n      console.log('2');\n      createBullet(i);\n    }\n\n    bullets = document.querySelectorAll('.slider-pagination-bullet');\n  }\n\n  function triggerBullets(e) {\n    if (e.target.classList.contains('slider-pagination-bullet')) {\n      var numberBulletIndex = Number(e.target.dataset.bulletIndex);\n      bulletClickTrigger(numberBulletIndex);\n    }\n  }\n\n  function createBullet(index) {\n    var el = document.createElement('span');\n    el.classList.add('slider-pagination-bullet');\n    el.setAttribute('tabindex', '0');\n    el.dataset.bulletIndex = index;\n    sliderPagination.appendChild(el);\n  }\n\n  function changeSliderPosition(indexOfNewActiveSlide) {\n    setSliderPosition(indexOfNewActiveSlide); // Add transition duration during changing slides.\n\n    startSliding();\n  }\n\n  function startSliding() {\n    sliderWrapper.style.transitionDuration = '300ms';\n    addSlidingStatus();\n  }\n\n  function endSliding() {\n    sliderWrapper.style.transitionDuration = '0ms';\n    removeSlidingStatus();\n  }\n\n  function bulletClickTrigger(indexOfNewActiveSlide) {\n    changeSliderPosition(indexOfNewActiveSlide);\n    setNewActiveSlideAndBullet(indexOfNewActiveSlide);\n    setCurrentSlideNumber();\n  }\n\n  function setSliderPosition(indexOfSlide) {\n    var draggedDistance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var slowingCoeff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    slidePosition = slideHeight * indexOfSlide + draggedDistance / slowingCoeff;\n    sliderWrapper.style.transform = \"translate3d(0, \".concat(-slidePosition, \"px, 0)\");\n  }\n\n  function removePrevActiveSlideAndBullet(i) {\n    slides[i].classList.remove('active-slide');\n    bullets[i].classList.remove('active-bullet');\n  }\n\n  function addActiveSlideAndBullet(i) {\n    slides[i].classList.add('active-slide');\n    bullets[i].classList.add('active-bullet');\n  }\n\n  function setNewActiveSlideAndBullet(newIndex) {\n    var prevIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : indexOfActiveSlide;\n    removePrevActiveSlideAndBullet(prevIndex);\n    addActiveSlideAndBullet(newIndex);\n    setNewIndexOfActiveSlide(newIndex);\n  }\n\n  function setNewIndexOfActiveSlide(newIndex) {\n    indexOfActiveSlide = newIndex;\n  }\n\n  function isSliding() {\n    return sliderWrapper.classList.contains('sliding');\n  }\n\n  function startOfDragging(e) {\n    // If click was on pagination bar or right click was used\n    // then slider-dragging is not getting triggered.\n    var elementsClickedId = [e.target.id, e.target.parentElement.id];\n    if (elementsClickedId.includes('sliderPagination') || e.buttons === 2 || isSliding()) return;\n    wasPressed = true;\n    startPointOfDragging = e.pageY;\n    timeOfStartDragging = new Date().getTime();\n    endSliding();\n    e.preventDefault();\n  }\n\n  function dragging(e) {\n    // If user move mouse without wasPressed slider won't get triggered.\n    if (!wasPressed) return;\n    var currentPointOfDragging = e.pageY;\n    var draggedDistance = startPointOfDragging - currentPointOfDragging;\n    var slowingCoeff = 2;\n\n    if (draggedDistance < 0) {\n      draggingUp(draggedDistance, slowingCoeff);\n    } else if (draggedDistance > 0) {\n      draggingDown(draggedDistance, slowingCoeff);\n    }\n  }\n\n  function draggingUp(draggedDistance, slowingCoeff) {\n    if (isFirstSlide()) {\n      setSliderPosition(indexOfActiveSlide, draggedDistance, slowingCoeff);\n    } else {\n      setSliderPosition(indexOfActiveSlide, draggedDistance);\n    }\n  }\n\n  function draggingDown(draggedDistance, slowingCoeff) {\n    if (isLastSlide()) {\n      setSliderPosition(indexOfActiveSlide, draggedDistance, slowingCoeff);\n    } else {\n      setSliderPosition(indexOfActiveSlide, draggedDistance);\n    }\n  }\n\n  function endOfDragging(e) {\n    if (!wasPressed) return;\n    wasPressed = false;\n    var endPointOfDragging = e.pageY;\n    var draggedDistance = startPointOfDragging - endPointOfDragging;\n    draggingStopped = new Date().getTime();\n    chooseNextSlide(draggedDistance, timeOfDragging());\n  }\n\n  function timeOfDragging() {\n    return draggingStopped - timeOfStartDragging;\n  }\n\n  function chooseNextSlide(draggedDistance, dragTime) {\n    if (draggedDistance === 0) {// Nothing happens.\n    } else if (timeLimitBreached(dragTime)) {\n      goToCurrentSlide();\n      startSliding();\n    } else if (directionOfDragging(draggedDistance) === 'down') {\n      isFirstSlide() ? goToCurrentSlide() : goToPrevSlide();\n      startSliding();\n    } else if (directionOfDragging(draggedDistance) === 'up') {\n      isLastSlide() ? goToCurrentSlide() : goToNextSlide();\n      startSliding();\n    }\n  }\n\n  function directionOfDragging(draggedDistance) {\n    return draggedDistance > 0 ? 'up' : 'down';\n  }\n\n  function timeLimitBreached(dragTime) {\n    return dragTime > 250;\n  }\n\n  function addSlidingStatus() {\n    sliderWrapper.classList.add('sliding');\n  }\n\n  function removeSlidingStatus() {\n    sliderWrapper.classList.remove('sliding');\n  }\n\n  function isFirstSlide() {\n    return indexOfActiveSlide === 0;\n  }\n\n  function isLastSlide() {\n    return indexOfActiveSlide === slides.length - 1;\n  }\n\n  function goToCurrentSlide() {\n    setSliderPosition(indexOfActiveSlide);\n  }\n\n  function goToPrevSlide() {\n    var newActiveSlide = indexOfActiveSlide - 1;\n    var prevActiveSlide = indexOfActiveSlide;\n    setSliderPosition(newActiveSlide);\n    setNewActiveSlideAndBullet(newActiveSlide, prevActiveSlide);\n    setCurrentSlideNumber();\n  }\n\n  function goToNextSlide() {\n    var newActiveSlide = indexOfActiveSlide + 1;\n    var prevActiveSlide = indexOfActiveSlide;\n    setSliderPosition(newActiveSlide);\n    setNewActiveSlideAndBullet(newActiveSlide, prevActiveSlide);\n    setCurrentSlideNumber();\n  }\n\n  function initEventListeners() {\n    if (window.PointerEvent) {\n      sliderContainer.addEventListener('pointerdown', startOfDragging);\n      sliderContainer.addEventListener('pointermove', dragging);\n      sliderContainer.addEventListener('pointerup', endOfDragging);\n      sliderContainer.addEventListener('pointercancel', endOfDragging); //\n\n      sliderContainer.addEventListener('mouseleave', endOfDragging);\n    } else {\n      sliderContainer.addEventListener('mousedown', startOfDragging);\n      sliderContainer.addEventListener('mousemove', dragging);\n      sliderContainer.addEventListener('mouseup', endOfDragging);\n      sliderContainer.addEventListener('mouseleave', endOfDragging);\n      sliderContainer.addEventListener('touchstart', startOfDragging);\n      sliderContainer.addEventListener('touchmove', dragging);\n      sliderContainer.addEventListener('touchcancel', endOfDragging);\n      sliderContainer.addEventListener('touchend', endOfDragging);\n    } // Set transitionDuration as 0ms when sliding transition ended\n    // so we can drag without any transition.\n\n\n    sliderWrapper.addEventListener('transitionend', endSliding); // Change size of slide according to the size of viewport.\n\n    window.addEventListener('resize', function () {\n      setSizeOfSlide();\n      setSliderPosition(indexOfActiveSlide);\n    }); // Listen click on each bullet.\n\n    sliderPagination.addEventListener('click', triggerBullets);\n    sliderPagination.addEventListener('keydown', handleBulletPress);\n  }\n\n  function handleBulletPress(e) {\n    console.log(e.code);\n\n    if (e.code === 'Enter' || e.code === 'Space') {\n      // Prevent prevent space bar from scrolling page.\n      e.preventDefault();\n      triggerBullets(e);\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/verticalSlider.js\n");

/***/ }),

/***/ "./src/styles/index.css":
/*!******************************!*\
  !*** ./src/styles/index.css ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3R5bGVzL2luZGV4LmNzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS13ZWJwYWNrLXByb2plY3QvLi9zcmMvc3R5bGVzL2luZGV4LmNzcz8xNzFmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/styles/index.css\n");

/***/ }),

/***/ "./main.mjs":
/*!******************!*\
  !*** ./main.mjs ***!
  \******************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_styles_index_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/styles/index.css */ \"./src/styles/index.css\");\n/* harmony import */ var _src_scripts_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/scripts/index.js */ \"./src/scripts/index.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9tYWluLm1qcy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL215LXdlYnBhY2stcHJvamVjdC8uL21haW4ubWpzP2ZhNjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuL3NyYy9zdHlsZXMvaW5kZXguY3NzJztcbmltcG9ydCAnLi9zcmMvc2NyaXB0cy9pbmRleC5qcyc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./main.mjs\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./main.mjs");
/******/ 	
/******/ })()
;